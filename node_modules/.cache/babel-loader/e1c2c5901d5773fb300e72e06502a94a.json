{"ast":null,"code":"var _jsxFileName = \"/home/nghiatt/React/git/employee/src/context/EmployeeContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { createContext, useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EmployeeContext = /*#__PURE__*/createContext();\n\nconst EmployeeContextProvider = props => {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n\n  const retrieveEmployees = async () => {\n    const response = await axios.get(`http://localhost:3000/employees`);\n    return response.data;\n  };\n\n  useEffect(() => {\n    axios.get(`http://localhost:3000/employees`).then(res => {\n      setEmployees(res.data);\n    });\n  }, []);\n  useEffect(() => {\n    const getAllEmployees = async () => {\n      const allEmployees = await retrieveEmployees();\n      if (allEmployees) setEmployees(allEmployees);\n    };\n\n    getAllEmployees();\n  }, []);\n  useEffect(() => {\n    setEmployees(JSON.parse(localStorage.getItem('employees')));\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  });\n\n  const addEmployee = async (name, gender, email, address, phone, role) => {\n    const request = {\n      id: uuidv4(),\n      name,\n      gender,\n      email,\n      address,\n      phone,\n      role\n    };\n    const response = await axios.post(`http://localhost:3000/employees`, request);\n    setEmployees([...employees, response.data]);\n  };\n\n  const deleteEmployee = async id => {\n    await axios.delete(`http://localhost:3000/employees/${id}`);\n    setEmployees(employees.filter(employee => employee.id !== id));\n  };\n\n  const updateEmployee = async (id, updatedEmployee) => {\n    await axios.put(`http://localhost:3000/employees/${updatedEmployee.id}`, updatedEmployee);\n    setEmployees(employees.map(employee => employee.id === id ? updatedEmployee : employee));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n      value: {\n        employees,\n        addEmployee,\n        deleteEmployee,\n        updateEmployee\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeContextProvider, \"re1+J3pylOyw9S1EuVg75WO2pPM=\");\n\n_c = EmployeeContextProvider;\nexport default EmployeeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeContextProvider\");","map":{"version":3,"sources":["/home/nghiatt/React/git/employee/src/context/EmployeeContext.js"],"names":["axios","React","createContext","useEffect","useState","v4","uuidv4","EmployeeContext","EmployeeContextProvider","props","employees","setEmployees","retrieveEmployees","response","get","data","then","res","getAllEmployees","allEmployees","JSON","parse","localStorage","getItem","setItem","stringify","addEmployee","name","gender","email","address","phone","role","request","id","post","deleteEmployee","delete","filter","employee","updateEmployee","updatedEmployee","put","map","children"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { createContext, useEffect, useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const EmployeeContext = createContext()\n\nconst EmployeeContextProvider = (props) => {\n    const [employees, setEmployees] = useState([])\n\n    const retrieveEmployees = async () => {\n        const response = await axios.get(`http://localhost:3000/employees`)\n        return response.data\n    }\n\n    useEffect(() => {\n        axios.get(`http://localhost:3000/employees`).then(res => {\n            setEmployees(res.data)\n        })\n    }, [])\n\n    useEffect(() => {\n        const getAllEmployees = async () => {\n            const allEmployees = await retrieveEmployees()\n            if(allEmployees) setEmployees(allEmployees)\n        }\n        getAllEmployees()\n    }, [])\n\n    useEffect(()=> {\n        setEmployees(JSON.parse(localStorage.getItem('employees')))\n    },[])\n    \n    useEffect(() => {\n        localStorage.setItem('employees', JSON.stringify(employees));\n    })\n\n    const addEmployee = async (name, gender, email, address, phone, role) => {\n        const request = \n            {\n                id: uuidv4(),\n                name,\n                gender,\n                email,\n                address,\n                phone,\n                role,\n            }\n        const response = await axios.post(`http://localhost:3000/employees`, request)\n        setEmployees(\n            [...employees, response.data]\n        )\n    }\n\n    const deleteEmployee = async (id) => {\n        await axios.delete(`http://localhost:3000/employees/${id}`)\n        setEmployees(employees.filter(employee => employee.id !== id))\n    }\n\n    const updateEmployee = async (id, updatedEmployee) => {\n        await axios.put(`http://localhost:3000/employees/${updatedEmployee.id}`, updatedEmployee)\n        setEmployees(employees.map((employee) => employee.id === id ? updatedEmployee : employee))\n    }\n\n    return (\n        <div>\n            <EmployeeContext.Provider  \n                value={{employees, addEmployee, deleteEmployee, updateEmployee}}\n            >\n                {props.children}\n            </EmployeeContext.Provider>\n        </div>\n    )\n}\n\nexport default EmployeeContextProvider\n"]},"metadata":{},"sourceType":"module"}